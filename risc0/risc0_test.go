package risc0

import (
	"bytes"
	"encoding/hex"
	"testing"
)

func TestCalculateClaimDigest(t *testing.T) {
	var imageID [32]byte
	imageID_, err := hex.DecodeString("e45b67a3c24ff3b77f87fec1533dca31524fc19f02bd433d4e6bba729a7646a7")
	if err != nil {
		t.Fatal(err)
	}
	copy(imageID[:], imageID_)
	journal, err := hex.DecodeString("a10b726700000000a1acc73eb45794fa1734f14d882e91925b6006f79d3bb2460df9d01b333d70090003000000000100906ed5000015150b07ff800e000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000700000000000000dca1a1841ab2e3fa7025c1d175d2c947df760b3baa4a9a0f30f4fd05718fcfe3000000000000000000000000000000000000000000000000000000000000000083d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014fc8f819e864fd03a5d377061e8148d6e5143679000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030333334000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030363135000000000000000000000000000000000000")
	if err != nil {
		t.Fatal(err)
	}
	journalDigest := sha256(journal)
	claimDigest := CalculateClaimDigest(imageID, journalDigest)
	expectedClaimDigest, err := hex.DecodeString("9cbe0c90f193cb5e5716c6bc1a780f164ca05254b8bd50485109d9d29544ea33")
	if err != nil {
		t.Fatal(err)
	}
	if !bytes.Equal(claimDigest[:], expectedClaimDigest) {
		t.Fatalf("expected: %x, actual: %x", expectedClaimDigest, claimDigest)
	}
}
